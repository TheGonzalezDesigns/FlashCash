#!/bin/bash

exchange=$1
network=$2
vol=$3
status=1
errStatus=0
relPath=../SOLUTIONS/networks/$2/

if [[ -z $exchange ]]; then
	echo "Error: Missing exchange."
	status=0
	errStatus=1
fi

if [[ -z $network ]]; then
	echo "Error: Missing network."
	status=0
	errStatus=2
fi

exchange=$relPath/$exchange
mrc=$(cat "$exchange/DATA/mrc")
spread=$(cat "$exchange/DATA/spread")
trailLimit=$(cat "$exchange/DATA/trailLimit")

if [[ -z $vol ]]; then
	vol=$(cat "$exchange/DATA/volatility")
fi

./header

until [ $status -eq 0 ]; do
	quotes=$exchange"/DATA/QUOTES/$vol""Vol"
	files=$(dir $quotes --hide=dispatch.json --hide=hiVol --hide=loVol --hide=refine* -1)
	quantity=$(dir $quotes --hide=dispatch.json --hide=hiVol --hide=loVol  --hide=refine* -1 | wc -l)
	gcc -O3 ./composeQuotes.c -o ./composeQuotes.o \
	&& valgrind -s --leak-check=full ./composeQuotes.o "$files" "$quantity" "$quotes/" $trailLimit  # will open all files and send them to filterQuotes.js

	status=$?
	
	if [[ $status -ne 0  ]]; then
		sleep 25
		./header
	fi

done

if [[ $status -eq 0 && $errStatus -eq 0 ]]; then
	echo -e
	echo 'Debugging completed.'
	echo -e
fi
#!/bin/bash

exchange=$1
network=$2
vol=$3
status=1
errStatus=0

if [[ -z $exchange ]]; then
	echo "Error: Missing exchange."
	status=0
	errStatus=1
fi

if [[ -z $network ]]; then
	echo "Error: Missing network."
	status=0
	errStatus=2
fi

